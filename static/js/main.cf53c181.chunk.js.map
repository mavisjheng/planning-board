{"version":3,"sources":["data/teams.js","task.jsx","member-task.jsx","team-list.jsx","toolbar.jsx","utils.js","index.js"],"names":["teamData","name","ALMA","Bremen","Clover","Crystal","Jade","Martian","Sapphire","Zen1","Container","styled","div","props","isDragging","DropdownContainer","Column","this","task","index","member","onSelectTaskDay","onDeleteTask","day","onTaskInputChange","draggableId","id","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Form","Control","as","value","content","onChange","event","target","Dropdown","onSelect","Toggle","variant","size","className","Menu","Item","eventKey","Component","Day","Name","h4","TaskList","isDraggingOver","InnerList","nextProps","tasks","map","key","MemberTask","onAddTask","overloading","onSelectMemberDay","remainingDays","forEach","style","marginBottom","Alert","droppableId","type","droppableProps","marginLeft","Button","onClick","placeholder","ButtonContainer","TeamListContainer","CircleButton","button","TeamList","selectedTeam","onSelectTeam","useState","teamListDisplayed","setTeamListDisplayed","OverlayTrigger","placement","overlay","Tooltip","handleToggleTeamList","teams","team","ToolButton","Toolbar","onClickImport","modalDisplayed","setModalDisplayed","handleCloseModal","fileName","contentType","linkDOM","document","createElement","file","Blob","href","URL","createObjectURL","download","click","exportFile","JSON","stringify","parse","localStorage","getItem","Modal","centered","show","onHide","Header","closeButton","Title","Body","Footer","clear","window","location","reload","genRandomString","Math","random","toString","substring","App","state","memberOrder","members","onDragEnd","result","destination","source","newMemberOrder","Array","from","splice","setState","start","finish","startTaskIds","taskIds","sourceMemberDays","Number","sourceTaskDays","taskId","newStart","finishTaskIds","destinationMemberDays","destinationTaskDays","newFinish","newMembers","newTaskIds","newMember","onTeamSelect","teamName","reduce","obj","previousSelectedDay","taskString","memberDay","filter","allTaskDays","length","editedTaskId","indexOf","newTasks","push","inputDOM","onchange","readImportedTask","evt","files","match","reader","FileReader","onload","e","readAsText","alert","prevProps","prevState","setItem","console","log","direction","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cf53c181.chunk.js","sourcesContent":["const teamData = {\n  name: [\n    \"ALMA\",\n    \"Bremen\",\n    \"Clover\",\n    \"Crystal\",\n    \"Jade\",\n    \"Martian\",\n    \"Raccoon Squat\",\n    \"Sapphire\",\n    \"Zen1\"\n  ],\n  ALMA: [\"Judy\", \"Lihan\", \"Prophet\"],\n  Bremen: [\"Andy\", \"Chaotsung\", \"Freddie\", \"Mesh\", \"Roy\", \"Wisdom\"],\n  Clover: [\n    \"Alvin\",\n    \"Chuck\",\n    \"David\",\n    \"Jack\",\n    \"Mavis\",\n    \"Tim\",\n    \"Rebecca\",\n    \"Shawn\"\n  ],\n  Crystal: [\n    \"Link\",\n    \"Darek\",\n    \"Carol\",\n    \"Emily\",\n    \"Minie\",\n    \"Joey\",\n    \"Harrison\",\n    \"Jimmy\",\n    \"Lighter\",\n    \"Alfred\",\n    \"Ethan\"\n  ],\n  Jade: [\n    \"Howard\",\n    \"Jason\",\n    \"NI\",\n    \"Sen\",\n    \"Tony\",\n    \"ChienYu\",\n    \"YingYu\",\n    \"YuHsuan\"\n  ],\n  Martian: [\"Alan\", \"Andrew\", \"Colby\"],\n  \"Raccoon Squat\": [\n    \"Askeing\",\n    \"Carpusher\",\n    \"Matt\",\n    \"David\",\n    \"Jack\",\n    \"Ryan\",\n    \"Smiler\",\n    \"Ethan\",\n    \"Hill\"\n  ],\n  Sapphire: [\n    \"James Hsiao\",\n    \"Yvon\",\n    \"Nate\",\n    \"Sudio\",\n    \"Jerry\",\n    \"Roger\",\n    \"James Lin\"\n  ],\n  Zen1: [\"Todd\", \"Paul\", \"Iris\", \"David\", \"Charles\", \"Trista\", \"Zion\", \"Cary\"]\n};\n\nexport default teamData;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Form, Dropdown } from \"react-bootstrap\";\n\nconst Container = styled.div`\n  border: none;\n  border-radius: 5px;\n  padding: 8px;\n  background-color: ${props => (props.isDragging ? \"lightyellow\" : \"white\")};\n  display: flex;\n`;\n\nconst DropdownContainer = styled.div`\n  align-items: center;\n  display: flex;\n  margin-right: -12px;\n`;\n\nexport default class Column extends Component {\n  render() {\n    const {\n      task,\n      index,\n      member,\n      onSelectTaskDay,\n      onDeleteTask,\n      day,\n      onTaskInputChange\n    } = this.props;\n    return (\n      <Draggable draggableId={task.id} index={index}>\n        {(provided, snapshot) => (\n          <Container\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            <Form.Control\n              as=\"textarea\"\n              value={task.content}\n              onChange={event => {\n                onTaskInputChange(event.target.value, task.id);\n              }}\n            />\n            <DropdownContainer>\n              <Dropdown\n                onSelect={day => {\n                  day < 0\n                    ? onDeleteTask(task.id, day, member)\n                    : onSelectTaskDay(task.id, day, member);\n                }}\n              >\n                <Dropdown.Toggle\n                  variant=\"outline-secondary\"\n                  id=\"dropdown-basic\"\n                  size=\"sm\"\n                  className=\"custom-task-dropdown-button\"\n                >\n                  {day}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item eventKey={-1}>-1</Dropdown.Item>\n                  <Dropdown.Item eventKey={0}>0</Dropdown.Item>\n                  <Dropdown.Item eventKey={1}>1</Dropdown.Item>\n                  <Dropdown.Item eventKey={2}>2</Dropdown.Item>\n                  <Dropdown.Item eventKey={3}>3</Dropdown.Item>\n                  <Dropdown.Item eventKey={4}>4</Dropdown.Item>\n                  <Dropdown.Item eventKey={5}>5</Dropdown.Item>\n                  <Dropdown.Item eventKey={6}>6</Dropdown.Item>\n                  <Dropdown.Item eventKey={7}>7</Dropdown.Item>\n                  <Dropdown.Item eventKey={8}>8</Dropdown.Item>\n                  <Dropdown.Item eventKey={9}>9</Dropdown.Item>\n                  <Dropdown.Item eventKey={10}>10</Dropdown.Item>\n                  <Dropdown.Item eventKey={11}>11</Dropdown.Item>\n                  <Dropdown.Item eventKey={12}>12</Dropdown.Item>\n                  <Dropdown.Item eventKey={13}>13</Dropdown.Item>\n                  <Dropdown.Item eventKey={14}>14</Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </DropdownContainer>\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Dropdown, Button, Alert } from \"react-bootstrap\";\nimport Task from \"./task\";\nimport \"./custom.css\";\n\nconst Container = styled.div`\n  margin: 8px;\n  background-color: white;\n  border-radius: 4px;\n  width: 220px;\n  display: flex;\n  flex-direction: column;\n  border: 1px solid lightgrey;\n`;\n\nconst Day = styled.div`\n  float: right;\n  margin-top: -24px;\n  margin-bottom: -16px;\n`;\n\nconst Name = styled.h4`\n  padding: 8px;\n  text-align: center;\n  color: SteelBlue;\n`;\n\nconst TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>\n    props.isDraggingOver ? \"lightblue\" : \"inherit\"};\n  flex-grow: 1;\n  min-height: 100px;\n`;\n\nclass InnerList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks === this.props.tasks) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      tasks,\n      onSelectTaskDay,\n      member,\n      onTaskInputChange,\n      onDeleteTask\n    } = this.props;\n    return tasks.map((task, index) => (\n      <Task\n        key={task.id}\n        task={task}\n        index={index}\n        day={task.day}\n        member={member}\n        onSelectTaskDay={onSelectTaskDay}\n        onTaskInputChange={onTaskInputChange}\n        onDeleteTask={onDeleteTask}\n      />\n    ));\n  }\n}\n\nexport default class MemberTask extends Component {\n  render() {\n    const {\n      member,\n      index,\n      tasks,\n      onSelectTaskDay,\n      onAddTask,\n      onTaskInputChange,\n      overloading,\n      onSelectMemberDay,\n      onDeleteTask,\n      day\n    } = this.props;\n\n    let remainingDays = day;\n    tasks.forEach(task => {\n      remainingDays -= task.day;\n    });\n\n    return (\n      <Draggable draggableId={member} index={index}>\n        {provided => (\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\n            <div>\n              <Name\n                {...provided.dragHandleProps}\n                style={{\n                  marginBottom: `${overloading ? \"-4px\" : \"0\"}`\n                }}\n              >\n                {member}\n              </Name>\n              {day && (\n                <Alert\n                  variant={overloading ? \"danger\" : \"info\"}\n                  className={\"custom-overloaded-alert\"}\n                >\n                  {remainingDays} days left\n                </Alert>\n              )}\n              <Day>\n                <Dropdown\n                  onSelect={day => {\n                    onSelectMemberDay(day, member);\n                  }}\n                >\n                  <Dropdown.Toggle\n                    variant=\"outline-secondary\"\n                    id=\"dropdown-basic\"\n                    size=\"sm\"\n                    className={\n                      day\n                        ? \"custom-dropdown-button\"\n                        : \"custom-task-dropdown-button\"\n                    }\n                  >\n                    {day ? day : \"Days\"}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    <Dropdown.Item eventKey={-1}>-1</Dropdown.Item>\n                    <Dropdown.Item eventKey={1}>1</Dropdown.Item>\n                    <Dropdown.Item eventKey={2}>2</Dropdown.Item>\n                    <Dropdown.Item eventKey={3}>3</Dropdown.Item>\n                    <Dropdown.Item eventKey={4}>4</Dropdown.Item>\n                    <Dropdown.Item eventKey={5}>5</Dropdown.Item>\n                    <Dropdown.Item eventKey={6}>6</Dropdown.Item>\n                    <Dropdown.Item eventKey={7}>7</Dropdown.Item>\n                    <Dropdown.Item eventKey={8}>8</Dropdown.Item>\n                    <Dropdown.Item eventKey={9}>9</Dropdown.Item>\n                    <Dropdown.Item eventKey={10}>10</Dropdown.Item>\n                    <Dropdown.Item eventKey={11}>11</Dropdown.Item>\n                    <Dropdown.Item eventKey={12}>12</Dropdown.Item>\n                    <Dropdown.Item eventKey={13}>13</Dropdown.Item>\n                    <Dropdown.Item eventKey={14}>14</Dropdown.Item>\n                  </Dropdown.Menu>\n                </Dropdown>\n              </Day>\n            </div>\n            <Droppable droppableId={member} type=\"task\">\n              {(provided, snapshot) => (\n                <TaskList\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  isDraggingOver={snapshot.isDraggingOver}\n                >\n                  <InnerList\n                    tasks={tasks}\n                    onSelectTaskDay={onSelectTaskDay}\n                    member={member}\n                    onTaskInputChange={onTaskInputChange}\n                    onDeleteTask={onDeleteTask}\n                  />\n                  <div style={{ marginLeft: \"8px\" }}>\n                    {day && (\n                      <Button\n                        variant=\"light\"\n                        size=\"sm\"\n                        className=\"add-task-button\"\n                        onClick={onAddTask}\n                      >\n                        Add Task\n                      </Button>\n                    )}\n                  </div>\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport { FiChevronsDown, FiChevronsUp } from \"react-icons/fi\";\nimport teams from \"./data/teams\";\nimport \"./custom.css\";\n\nconst ButtonContainer = styled.div`\n  margin: 8px;\n  position: absolute;\n  top: 0px;\n  right: 0px;\n`;\n\nconst TeamListContainer = styled.div`\n  margin-top: 4px;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 48px;\n  right: 0px;\n  float: right;\n`;\n\nexport const CircleButton = styled.button`\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  border: 2px solid;\n  text-align: center;\n  color: black;\n  font: 22px Arial;\n  outline: none;\n  :focus {\n    outline: none;\n  }\n  :active {\n    border: 2px solid lightgrey;\n    color: lightgrey;\n  }\n`;\n\nexport default function TeamList({ selectedTeam, onSelectTeam }) {\n  const [teamListDisplayed, setTeamListDisplayed] = useState(false);\n  const handleToggleTeamList = teamListDisplayed =>\n    setTeamListDisplayed(!teamListDisplayed);\n\n  return (\n    <>\n      <ButtonContainer>\n        <OverlayTrigger\n          placement=\"left\"\n          overlay={\n            <Tooltip>{selectedTeam ? selectedTeam : \"Select Team\"}</Tooltip>\n          }\n        >\n          <CircleButton onClick={() => handleToggleTeamList(teamListDisplayed)}>\n            {teamListDisplayed ? (\n              <FiChevronsUp />\n            ) : selectedTeam ? (\n              selectedTeam[0]\n            ) : (\n              <FiChevronsDown />\n            )}\n          </CircleButton>\n        </OverlayTrigger>\n      </ButtonContainer>\n      {teamListDisplayed && (\n        <TeamListContainer>\n          {teams.name.map((team, index) => (\n            <Button\n              key={index}\n              variant={team === selectedTeam ? \"info\" : \"outline-info\"}\n              className=\"custom-team-button\"\n              onClick={() => onSelectTeam(team)}\n            >\n              {team}\n            </Button>\n          ))}\n        </TeamListContainer>\n      )}\n    </>\n  );\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, OverlayTrigger, Tooltip, Modal } from \"react-bootstrap\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { AiOutlineDownload, AiOutlineImport } from \"react-icons/ai\";\nimport { CircleButton } from \"./team-list\";\nimport \"./custom.css\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  margin: 8px;\n  position: absolute;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst ToolButton = styled(CircleButton)`\n  margin-left: 8px;\n`;\n\nexport default function Toolbar({ onClickImport }) {\n  const [modalDisplayed, setModalDisplayed] = useState(false);\n  const handleCloseModal = () => setModalDisplayed(false);\n  const handleShowModal = () => setModalDisplayed(true);\n\n  const cleanBoard = () => {\n    handleCloseModal();\n    localStorage.clear(\"planningBoard\");\n    window.location.reload();\n  };\n\n  const exportFile = (content, fileName, contentType) => {\n    const linkDOM = document.createElement(\"a\");\n    const file = new Blob([content], { type: contentType });\n    linkDOM.href = URL.createObjectURL(file);\n    linkDOM.download = fileName;\n    linkDOM.click();\n  };\n\n  return (\n    <>\n      <Container>\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={<Tooltip>Clean Board</Tooltip>}\n        >\n          <ToolButton onClick={handleShowModal}>\n            <FiTrash2 />\n          </ToolButton>\n        </OverlayTrigger>\n        <OverlayTrigger placement=\"top\" overlay={<Tooltip>Export</Tooltip>}>\n          <ToolButton\n            onClick={() =>\n              exportFile(\n                JSON.stringify(\n                  JSON.parse(localStorage.getItem(\"planningBoard\")),\n                  null,\n                  2\n                ),\n                \"planning-board.txt\",\n                \"text/plain\"\n              )\n            }\n          >\n            <AiOutlineDownload />\n          </ToolButton>\n        </OverlayTrigger>\n        <OverlayTrigger\n          placement=\"top\"\n          overlay={<Tooltip>Import .txt</Tooltip>}\n        >\n          <ToolButton onClick={onClickImport}>\n            <AiOutlineImport />\n          </ToolButton>\n        </OverlayTrigger>\n      </Container>\n      <Modal centered show={modalDisplayed} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to clean this board?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={cleanBoard}>\n            Clean\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","const genRandomString = () =>\n  Math.random()\n    .toString(36)\n    .substring(7);\n\nexport { genRandomString };\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@atlaskit/css-reset\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport teams from \"./data/teams\";\nimport MemberTask from \"./member-task\";\nimport TeamList from \"./team-list\";\nimport Toolbar from \"./toolbar\";\nimport { genRandomString } from \"./utils\";\n\nconst Container = styled.div`\n  display: flex;\n  width: calc(100% - 160px);\n`;\n\nclass App extends Component {\n  state = localStorage.getItem(\"planningBoard\")\n    ? JSON.parse(localStorage.getItem(\"planningBoard\"))\n    : {\n        selectedTeam: \"\",\n        memberOrder: [],\n        members: {},\n        tasks: {}\n      };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state !== prevState) {\n      localStorage.setItem(\"planningBoard\", JSON.stringify(this.state));\n    }\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    // switch member\n    if (type === \"member\") {\n      const newMemberOrder = Array.from(this.state.memberOrder);\n      newMemberOrder.splice(source.index, 1);\n      newMemberOrder.splice(destination.index, 0, draggableId);\n      this.setState({ memberOrder: newMemberOrder });\n      return;\n    }\n\n    // switch task for same member\n    const start = this.state.members[source.droppableId];\n    const finish = this.state.members[destination.droppableId];\n\n    if (start === finish) {\n      const member = this.state.members[source.droppableId];\n      const newTaskIds = Array.from(member.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newMember = {\n        ...member,\n        taskIds: newTaskIds\n      };\n\n      const newMembers = {\n        ...this.state.members,\n        [source.droppableId]: newMember\n      };\n\n      this.setState({ members: newMembers });\n      return;\n    }\n\n    // switch task for different member\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n\n    const sourceMemberDays = Number(this.state.members[start.id].day);\n    let sourceTaskDays = 0;\n    startTaskIds.forEach(taskId => {\n      sourceTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n      overloading: sourceTaskDays > sourceMemberDays\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const destinationMemberDays = Number(this.state.members[finish.id].day);\n    let destinationTaskDays = 0;\n    finishTaskIds.forEach(taskId => {\n      destinationTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n      overloading: destinationTaskDays > destinationMemberDays\n    };\n\n    const newMembers = {\n      ...this.state.members,\n      [newStart.id]: newStart,\n      [newFinish.id]: newFinish\n    };\n\n    this.setState({ members: newMembers });\n  };\n\n  onTeamSelect = teamName => {\n    const newMembers = teams[teamName].reduce(function(map, obj) {\n      map[obj] = {\n        id: obj,\n        day: null,\n        taskIds: []\n      };\n      return map;\n    }, {});\n\n    this.setState({\n      selectedTeam: teamName,\n      memberOrder: teams[teamName],\n      members: newMembers\n    });\n  };\n\n  onSelectMemberDay = (day, member, previousSelectedDay) => {\n    const taskString = genRandomString();\n    const memberDay = Number(day);\n\n    // if day is -1, remove member and all his tasks\n    if (memberDay < 0) {\n      const newMemberOrder = this.state.memberOrder.filter(\n        name => name !== member\n      );\n      const memberTasks = this.state.members[member].taskIds;\n      memberTasks.forEach(taskId => {\n        delete this.state.tasks[taskId];\n      });\n\n      delete this.state.members[member];\n\n      this.setState({\n        members: this.state.members,\n        memberOrder: newMemberOrder,\n        tasks: this.state.tasks\n      });\n\n      return;\n    }\n\n    // count if overloading\n    let allTaskDays = 0;\n    this.state.members[member].taskIds.forEach(taskId => {\n      allTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    if (\n      !previousSelectedDay &&\n      this.state.members[member].taskIds.length === 0\n    ) {\n      this.setState({\n        ...this.state,\n        tasks: {\n          ...this.state.tasks,\n          [taskString]: {\n            id: taskString,\n            content: \"\",\n            day: null\n          }\n        },\n        members: {\n          ...this.state.members,\n          [member]: {\n            ...this.state.members[member],\n            day,\n            taskIds: [taskString],\n            overloading: allTaskDays > memberDay\n          }\n        }\n      });\n    } else {\n      const newMember = {\n        ...this.state.members[member],\n        day,\n        overloading: allTaskDays > memberDay\n      };\n\n      const newMembers = {\n        ...this.state.members,\n        [member]: newMember\n      };\n\n      this.setState({ members: newMembers });\n    }\n  };\n\n  onDeleteTask = (editedTaskId, day, member) => {\n    const newTaskIds = Array.from(this.state.members[member].taskIds);\n    const index = newTaskIds.indexOf(editedTaskId);\n    newTaskIds.splice(index, 1);\n\n    delete this.state.tasks[editedTaskId];\n\n    // count if overloading\n    const memberDay = Number(this.state.members[member].day);\n    let allTaskDays = 0;\n    newTaskIds.forEach(taskId => {\n      allTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    this.setState({\n      ...this.state,\n      tasks: this.state.tasks,\n      members: {\n        ...this.state.members,\n        [member]: {\n          ...this.state.members[member],\n          taskIds: newTaskIds,\n          overloading: allTaskDays > memberDay\n        }\n      }\n    });\n  };\n\n  onSelectTaskDay = (editedTaskId, day, member) => {\n    const memberDay = Number(this.state.members[member].day);\n    let allTaskDays = Number(day);\n\n    const newTasks = {\n      ...this.state.tasks,\n      [editedTaskId]: {\n        ...this.state.tasks[editedTaskId],\n        day\n      }\n    };\n    this.setState({\n      ...this.state,\n      tasks: newTasks\n    });\n\n    // count if overloading\n    this.state.members[member].taskIds.forEach(taskId => {\n      if (editedTaskId !== taskId) {\n        allTaskDays += Number(this.state.tasks[taskId].day);\n      }\n    });\n\n    const newMember = {\n      ...this.state.members[member],\n      overloading: allTaskDays > memberDay\n    };\n    const newMembers = {\n      ...this.state.members,\n      [member]: newMember\n    };\n    this.setState({ members: newMembers });\n  };\n\n  onAddTask = member => {\n    const newTaskIds = Array.from(this.state.members[member].taskIds);\n    const taskString = genRandomString();\n    newTaskIds.push(taskString);\n\n    this.setState({\n      ...this.state,\n      tasks: {\n        ...this.state.tasks,\n        [taskString]: {\n          id: taskString,\n          content: \"\",\n          day: null\n        }\n      },\n      members: {\n        ...this.state.members,\n        [member]: {\n          ...this.state.members[member],\n          taskIds: newTaskIds\n        }\n      }\n    });\n  };\n\n  onTaskInputChange = (value, taskId) => {\n    const newTasks = {\n      ...this.state.tasks,\n      [taskId]: {\n        ...this.state.tasks[taskId],\n        content: value\n      }\n    };\n    this.setState({\n      ...this.state,\n      tasks: newTasks\n    });\n  };\n\n  onClickImport = () => {\n    const inputDOM = document.createElement(\"input\");\n    inputDOM.type = \"file\";\n    inputDOM.onchange = this.readImportedTask;\n    inputDOM.click();\n  };\n\n  readImportedTask = evt => {\n    const file = evt.target.files[0];\n    const textType = /text.*/;\n    if (file.type.match(textType)) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const content = e.target.result;\n        this.setState(JSON.parse(content));\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"Unsupported file format\");\n    }\n  };\n\n  render() {\n    const { selectedTeam, memberOrder, members, tasks } = this.state;\n    console.log(this.state);\n\n    return (\n      <>\n        {selectedTeam && (\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <Droppable\n              droppableId=\"team-member-list\"\n              direction=\"horizontal\"\n              type=\"member\"\n            >\n              {provided => (\n                <Container {...provided.droppableProps} ref={provided.innerRef}>\n                  {memberOrder.map((member, index) => {\n                    return (\n                      <MemberTask\n                        key={`${selectedTeam}-${member}`}\n                        index={index}\n                        member={member}\n                        overloading={members[member].overloading}\n                        onAddTask={() => this.onAddTask(member)}\n                        day={members[member].day}\n                        tasks={members[member].taskIds.map(\n                          taskId => tasks[taskId]\n                        )}\n                        onSelectMemberDay={(day, member) =>\n                          this.onSelectMemberDay(\n                            day,\n                            member,\n                            members[member].day\n                          )\n                        }\n                        onSelectTaskDay={(taskId, day, member) =>\n                          this.onSelectTaskDay(taskId, day, member)\n                        }\n                        onDeleteTask={(taskId, day, member) =>\n                          this.onDeleteTask(taskId, day, member)\n                        }\n                        onTaskInputChange={(value, taskId) =>\n                          this.onTaskInputChange(value, taskId)\n                        }\n                      />\n                    );\n                  })}\n                  {provided.placeholder}\n                </Container>\n              )}\n            </Droppable>\n          </DragDropContext>\n        )}\n        <TeamList\n          onSelectTeam={team => this.onTeamSelect(team)}\n          selectedTeam={selectedTeam}\n        />\n        <Toolbar onClickImport={this.onClickImport} />\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}