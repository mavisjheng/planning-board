{"version":3,"sources":["data/teams.js","constants.js","task.jsx","member-task.jsx","toolbar.jsx","utils.js","index.js"],"names":["teamData","name","ALMA","Bremen","Clover","Crystal","Jade","Martian","Sapphire","Zen1","fourteenDays","Container","styled","div","props","isDragging","DropdownContainer","Column","this","task","index","member","onSelectTaskDay","onDeleteTask","day","onTaskInputChange","draggableId","id","provided","snapshot","draggableProps","dragHandleProps","ref","innerRef","Form","Control","as","value","content","className","onChange","event","target","Dropdown","onSelect","Toggle","variant","size","Menu","map","number","Item","key","eventKey","Component","MemberInfoContainer","Name","h5","DayContainer","AddTaskContainer","TaskList","isDraggingOver","InnerList","nextProps","tasks","MemberTask","onAddTask","overloading","onSelectMemberDay","remainingDays","forEach","Badge","droppableId","type","droppableProps","Button","onClick","placeholder","ToolButton","button","Toolbar","onClickImport","onSelectTeam","selectedTeam","useState","modalDisplayed","setModalDisplayed","handleCloseModal","Navbar","bg","sticky","Brand","OverlayTrigger","placement","overlay","Tooltip","fileName","contentType","linkDOM","document","createElement","file","Blob","href","URL","createObjectURL","download","click","exportFile","JSON","stringify","parse","localStorage","getItem","team","teams","Modal","centered","show","onHide","Header","closeButton","Title","Body","Footer","clear","window","location","reload","genRandomString","Math","random","toString","substring","App","state","memberOrder","members","onDragEnd","result","destination","source","newMemberOrder","Array","from","splice","setState","start","finish","startTaskIds","taskIds","sourceMemberDays","Number","sourceTaskDays","taskId","newStart","finishTaskIds","destinationMemberDays","destinationTaskDays","newFinish","newMembers","newTaskIds","newMember","onTeamSelect","teamName","reduce","obj","previousSelectedDay","taskString","memberDay","filter","allTaskDays","length","editedTaskId","indexOf","newTasks","push","inputDOM","onchange","readImportedTask","evt","files","match","reader","FileReader","onload","e","readAsText","alert","prevProps","prevState","setItem","console","log","direction","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.9a8a6fa5.chunk.js","sourcesContent":["const teamData = {\n  name: [\n    \"ALMA\",\n    \"Bremen\",\n    \"Clover\",\n    \"Crystal\",\n    \"Jade\",\n    \"Martian\",\n    \"Raccoon Squat\",\n    \"Sapphire\",\n    \"Zen1\"\n  ],\n  ALMA: [\"Judy\", \"Lihan\", \"Prophet\"],\n  Bremen: [\"Andy\", \"Chaotsung\", \"Freddie\", \"Mesh\", \"Roy\", \"Wisdom\"],\n  Clover: [\n    \"Alvin\",\n    \"Chuck\",\n    \"David\",\n    \"Jack\",\n    \"Mavis\",\n    \"Tim\",\n    \"Rebecca\",\n    \"Shawn\"\n  ],\n  Crystal: [\n    \"Link\",\n    \"Darek\",\n    \"Carol\",\n    \"Emily\",\n    \"Minie\",\n    \"Joey\",\n    \"Harrison\",\n    \"Jimmy\",\n    \"Lighter\",\n    \"Alfred\",\n    \"Ethan\"\n  ],\n  Jade: [\n    \"Howard\",\n    \"Jason\",\n    \"NI\",\n    \"Sen\",\n    \"Tony\",\n    \"ChienYu\",\n    \"YingYu\",\n    \"YuHsuan\"\n  ],\n  Martian: [\"Alan\", \"Andrew\", \"Colby\"],\n  \"Raccoon Squat\": [\n    \"Askeing\",\n    \"Carpusher\",\n    \"Matt\",\n    \"David\",\n    \"Jack\",\n    \"Ryan\",\n    \"Smiler\",\n    \"Ethan\",\n    \"Hill\"\n  ],\n  Sapphire: [\n    \"James Hsiao\",\n    \"Yvon\",\n    \"Nate\",\n    \"Sudio\",\n    \"Jerry\",\n    \"Roger\",\n    \"James Lin\"\n  ],\n  Zen1: [\"Todd\", \"Paul\", \"Iris\", \"David\", \"Charles\", \"Trista\", \"Zion\", \"Cary\"]\n};\n\nexport default teamData;\n","const fourteenDays = [-1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n\nexport { fourteenDays };\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport { Form, Dropdown } from \"react-bootstrap\";\nimport { fourteenDays } from \"./constants\";\n\nconst Container = styled.div`\n  width: 100%;\n  border: none;\n  border-radius: 5px;\n  padding: 8px;\n  background-color: ${props => (props.isDragging ? \"lightyellow\" : \"white\")};\n`;\n\nconst DropdownContainer = styled.div`\n  float: right;\n  margin-top: -2px;\n  margin-bottom: 8px;\n`;\n\nexport default class Column extends Component {\n  render() {\n    const {\n      task,\n      index,\n      member,\n      onSelectTaskDay,\n      onDeleteTask,\n      day,\n      onTaskInputChange\n    } = this.props;\n    return (\n      <Draggable draggableId={task.id} index={index}>\n        {(provided, snapshot) => (\n          <Container\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            isDragging={snapshot.isDragging}\n          >\n            <Form.Control\n              as=\"textarea\"\n              value={task.content}\n              className=\"task-form-textarea\"\n              onChange={event => {\n                onTaskInputChange(event.target.value, task.id);\n              }}\n            />\n            <DropdownContainer>\n              <Dropdown\n                onSelect={day => {\n                  day < 0\n                    ? onDeleteTask(task.id, day, member)\n                    : onSelectTaskDay(task.id, day, member);\n                }}\n              >\n                <Dropdown.Toggle\n                  variant=\"outline-secondary\"\n                  size=\"sm\"\n                  className=\"day-dropdown-button\"\n                >\n                  {day}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {fourteenDays.map(number => (\n                    <Dropdown.Item key={number} eventKey={number}>\n                      {number}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n            </DropdownContainer>\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { Dropdown, Button, Badge } from \"react-bootstrap\";\nimport Task from \"./task\";\nimport { fourteenDays } from \"./constants\";\nimport \"./style.css\";\n\nconst Container = styled.div`\n  margin: 8px;\n  background-color: white;\n  border-radius: 4px;\n  border: 1px solid lightgrey;\n  width: 160px;\n`;\n\nconst MemberInfoContainer = styled.div`\n  width: 100%;\n`;\n\nconst Name = styled.h5`\n  margin-bottom: -6px;\n  padding: 8px;\n  text-align: center;\n  color: SteelBlue;\n`;\n\nconst DayContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst AddTaskContainer = styled.div`\n  float: right;\n  clear: both;\n  margin-right: -4px;\n  margin-bottom: 4px;\n`;\n\nconst TaskList = styled.div`\n  width: 150px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>\n    props.isDraggingOver ? \"lightblue\" : \"inherit\"};\n  min-height: 480px;\n`;\n\nclass InnerList extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.tasks === this.props.tasks) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      tasks,\n      onSelectTaskDay,\n      member,\n      onTaskInputChange,\n      onDeleteTask\n    } = this.props;\n    return tasks.map((task, index) => (\n      <Task\n        key={task.id}\n        task={task}\n        index={index}\n        day={task.day}\n        member={member}\n        onSelectTaskDay={onSelectTaskDay}\n        onTaskInputChange={onTaskInputChange}\n        onDeleteTask={onDeleteTask}\n      />\n    ));\n  }\n}\n\nexport default class MemberTask extends Component {\n  render() {\n    const {\n      member,\n      index,\n      tasks,\n      onSelectTaskDay,\n      onAddTask,\n      onTaskInputChange,\n      overloading,\n      onSelectMemberDay,\n      onDeleteTask,\n      day\n    } = this.props;\n\n    let remainingDays = day;\n    tasks.forEach(task => {\n      remainingDays -= task.day;\n    });\n\n    return (\n      <Draggable draggableId={member} index={index}>\n        {provided => (\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\n            <MemberInfoContainer>\n              <Name {...provided.dragHandleProps}>{member}</Name>\n              <DayContainer>\n                {day && (\n                  <Badge variant={overloading ? \"danger\" : \"info\"}>\n                    {remainingDays} days left\n                  </Badge>\n                )}\n                <Dropdown\n                  onSelect={day => {\n                    onSelectMemberDay(day, member);\n                  }}\n                >\n                  <Dropdown.Toggle\n                    variant=\"outline-secondary\"\n                    id=\"dropdown-basic\"\n                    size=\"sm\"\n                    className=\"day-dropdown-button\"\n                  >\n                    {day ? day : \"Days\"}\n                  </Dropdown.Toggle>\n                  <Dropdown.Menu>\n                    {fourteenDays.map(number => (\n                      <Dropdown.Item key={number} eventKey={number}>\n                        {number}\n                      </Dropdown.Item>\n                    ))}\n                  </Dropdown.Menu>\n                </Dropdown>\n              </DayContainer>\n            </MemberInfoContainer>\n            <Droppable droppableId={member} type=\"task\">\n              {(provided, snapshot) => (\n                <TaskList\n                  {...provided.droppableProps}\n                  ref={provided.innerRef}\n                  isDraggingOver={snapshot.isDraggingOver}\n                >\n                  <InnerList\n                    tasks={tasks}\n                    onSelectTaskDay={onSelectTaskDay}\n                    member={member}\n                    onTaskInputChange={onTaskInputChange}\n                    onDeleteTask={onDeleteTask}\n                  />\n                  <AddTaskContainer>\n                    {day && (\n                      <Button\n                        variant=\"light\"\n                        size=\"sm\"\n                        className=\"add-task-button\"\n                        onClick={onAddTask}\n                      >\n                        Add Task\n                      </Button>\n                    )}\n                  </AddTaskContainer>\n                  {provided.placeholder}\n                </TaskList>\n              )}\n            </Droppable>\n          </Container>\n        )}\n      </Draggable>\n    );\n  }\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport {\n  Button,\n  OverlayTrigger,\n  Tooltip,\n  Modal,\n  Navbar,\n  Dropdown\n} from \"react-bootstrap\";\nimport { FiTrash2 } from \"react-icons/fi\";\nimport { AiOutlineDownload, AiOutlineImport } from \"react-icons/ai\";\nimport teams from \"./data/teams\";\nimport \"./style.css\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  margin: 8px;\n  position: absolute;\n  bottom: 0px;\n  right: 0px;\n`;\n\nconst ToolButton = styled.button`\n  border-radius: 50%;\n  width: 38px;\n  height: 38px;\n  border: 2px solid;\n  text-align: center;\n  margin-left: 8px;\n  color: black;\n  font: 22px Arial;\n  outline: none;\n  :focus {\n    outline: none;\n  }\n  :active {\n    border: 2px solid lightgrey;\n    color: lightgrey;\n  }\n`;\n\nexport default function Toolbar({ onClickImport, onSelectTeam, selectedTeam }) {\n  const [modalDisplayed, setModalDisplayed] = useState(false);\n  const handleCloseModal = () => setModalDisplayed(false);\n  const handleShowModal = () => setModalDisplayed(true);\n\n  const cleanBoard = () => {\n    handleCloseModal();\n    localStorage.clear(\"planningBoard\");\n    window.location.reload();\n  };\n\n  const exportFile = (content, fileName, contentType) => {\n    const linkDOM = document.createElement(\"a\");\n    const file = new Blob([content], { type: contentType });\n    linkDOM.href = URL.createObjectURL(file);\n    linkDOM.download = fileName;\n    linkDOM.click();\n  };\n\n  return (\n    <>\n      <Navbar bg=\"dark\" sticky=\"top\" className=\"nav-toolbar\">\n        <Navbar.Brand>Planning Board</Navbar.Brand>\n        <Container>\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={<Tooltip>Clean Board</Tooltip>}\n          >\n            <ToolButton onClick={handleShowModal}>\n              <FiTrash2 />\n            </ToolButton>\n          </OverlayTrigger>\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={<Tooltip>Export</Tooltip>}\n          >\n            <ToolButton\n              onClick={() =>\n                exportFile(\n                  JSON.stringify(\n                    JSON.parse(localStorage.getItem(\"planningBoard\")),\n                    null,\n                    2\n                  ),\n                  \"planning-board.txt\",\n                  \"text/plain\"\n                )\n              }\n            >\n              <AiOutlineDownload />\n            </ToolButton>\n          </OverlayTrigger>\n          <OverlayTrigger\n            placement=\"bottom\"\n            overlay={<Tooltip>Import .txt</Tooltip>}\n          >\n            <ToolButton onClick={onClickImport}>\n              <AiOutlineImport />\n            </ToolButton>\n          </OverlayTrigger>\n          <Dropdown onSelect={team => onSelectTeam(team)}>\n            <Dropdown.Toggle variant=\"info\">\n              {selectedTeam ? selectedTeam : \"Select Team\"}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {teams.name.map(team => (\n                <Dropdown.Item\n                  key={team}\n                  eventKey={team}\n                  className=\"team-dropdown-item\"\n                >\n                  {team}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Container>\n      </Navbar>\n      <Modal centered show={modalDisplayed} onHide={handleCloseModal}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirmation</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Are you sure you want to clean this board?</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleCloseModal}>\n            Cancel\n          </Button>\n          <Button variant=\"danger\" onClick={cleanBoard}>\n            Clean\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n  );\n}\n","const genRandomString = () =>\n  Math.random()\n    .toString(36)\n    .substring(7);\n\nexport { genRandomString };\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"@atlaskit/css-reset\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport teams from \"./data/teams\";\nimport MemberTask from \"./member-task\";\nimport Toolbar from \"./toolbar\";\nimport { genRandomString } from \"./utils\";\n\nconst Container = styled.div`\n  display: flex;\n  overflow: auto;\n  margin-right: 8px;\n`;\n\nclass App extends Component {\n  state = localStorage.getItem(\"planningBoard\")\n    ? JSON.parse(localStorage.getItem(\"planningBoard\"))\n    : {\n        selectedTeam: \"\",\n        memberOrder: [],\n        members: {},\n        tasks: {}\n      };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state !== prevState) {\n      localStorage.setItem(\"planningBoard\", JSON.stringify(this.state));\n    }\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return;\n    }\n\n    // switch member\n    if (type === \"member\") {\n      const newMemberOrder = Array.from(this.state.memberOrder);\n      newMemberOrder.splice(source.index, 1);\n      newMemberOrder.splice(destination.index, 0, draggableId);\n      this.setState({ memberOrder: newMemberOrder });\n      return;\n    }\n\n    // switch task for same member\n    const start = this.state.members[source.droppableId];\n    const finish = this.state.members[destination.droppableId];\n\n    if (start === finish) {\n      const member = this.state.members[source.droppableId];\n      const newTaskIds = Array.from(member.taskIds);\n      newTaskIds.splice(source.index, 1);\n      newTaskIds.splice(destination.index, 0, draggableId);\n\n      const newMember = {\n        ...member,\n        taskIds: newTaskIds\n      };\n\n      const newMembers = {\n        ...this.state.members,\n        [source.droppableId]: newMember\n      };\n\n      this.setState({ members: newMembers });\n      return;\n    }\n\n    // switch task for different member\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n\n    const sourceMemberDays = Number(this.state.members[start.id].day);\n    let sourceTaskDays = 0;\n    startTaskIds.forEach(taskId => {\n      sourceTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds,\n      overloading: sourceTaskDays > sourceMemberDays\n    };\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId);\n\n    const destinationMemberDays = Number(this.state.members[finish.id].day);\n    let destinationTaskDays = 0;\n    finishTaskIds.forEach(taskId => {\n      destinationTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds,\n      overloading: destinationTaskDays > destinationMemberDays\n    };\n\n    const newMembers = {\n      ...this.state.members,\n      [newStart.id]: newStart,\n      [newFinish.id]: newFinish\n    };\n\n    this.setState({ members: newMembers });\n  };\n\n  onTeamSelect = teamName => {\n    const newMembers = teams[teamName].reduce(function(map, obj) {\n      map[obj] = {\n        id: obj,\n        day: null,\n        taskIds: []\n      };\n      return map;\n    }, {});\n\n    this.setState({\n      selectedTeam: teamName,\n      memberOrder: teams[teamName],\n      members: newMembers\n    });\n  };\n\n  onSelectMemberDay = (day, member, previousSelectedDay) => {\n    const taskString = genRandomString();\n    const memberDay = Number(day);\n\n    // if day is -1, remove member and all his tasks\n    if (memberDay < 0) {\n      const newMemberOrder = this.state.memberOrder.filter(\n        name => name !== member\n      );\n      const memberTasks = this.state.members[member].taskIds;\n      memberTasks.forEach(taskId => {\n        delete this.state.tasks[taskId];\n      });\n\n      delete this.state.members[member];\n\n      this.setState({\n        members: this.state.members,\n        memberOrder: newMemberOrder,\n        tasks: this.state.tasks\n      });\n\n      return;\n    }\n\n    // count if overloading\n    let allTaskDays = 0;\n    this.state.members[member].taskIds.forEach(taskId => {\n      allTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    if (\n      !previousSelectedDay &&\n      this.state.members[member].taskIds.length === 0\n    ) {\n      this.setState({\n        ...this.state,\n        tasks: {\n          ...this.state.tasks,\n          [taskString]: {\n            id: taskString,\n            content: \"\",\n            day: null\n          }\n        },\n        members: {\n          ...this.state.members,\n          [member]: {\n            ...this.state.members[member],\n            day,\n            taskIds: [taskString],\n            overloading: allTaskDays > memberDay\n          }\n        }\n      });\n    } else {\n      const newMember = {\n        ...this.state.members[member],\n        day,\n        overloading: allTaskDays > memberDay\n      };\n\n      const newMembers = {\n        ...this.state.members,\n        [member]: newMember\n      };\n\n      this.setState({ members: newMembers });\n    }\n  };\n\n  onDeleteTask = (editedTaskId, day, member) => {\n    const newTaskIds = Array.from(this.state.members[member].taskIds);\n    const index = newTaskIds.indexOf(editedTaskId);\n    newTaskIds.splice(index, 1);\n\n    delete this.state.tasks[editedTaskId];\n\n    // count if overloading\n    const memberDay = Number(this.state.members[member].day);\n    let allTaskDays = 0;\n    newTaskIds.forEach(taskId => {\n      allTaskDays += Number(this.state.tasks[taskId].day);\n    });\n\n    this.setState({\n      ...this.state,\n      tasks: this.state.tasks,\n      members: {\n        ...this.state.members,\n        [member]: {\n          ...this.state.members[member],\n          taskIds: newTaskIds,\n          overloading: allTaskDays > memberDay\n        }\n      }\n    });\n  };\n\n  onSelectTaskDay = (editedTaskId, day, member) => {\n    const memberDay = Number(this.state.members[member].day);\n    let allTaskDays = Number(day);\n\n    const newTasks = {\n      ...this.state.tasks,\n      [editedTaskId]: {\n        ...this.state.tasks[editedTaskId],\n        day\n      }\n    };\n    this.setState({\n      ...this.state,\n      tasks: newTasks\n    });\n\n    // count if overloading\n    this.state.members[member].taskIds.forEach(taskId => {\n      if (editedTaskId !== taskId) {\n        allTaskDays += Number(this.state.tasks[taskId].day);\n      }\n    });\n\n    const newMember = {\n      ...this.state.members[member],\n      overloading: allTaskDays > memberDay\n    };\n    const newMembers = {\n      ...this.state.members,\n      [member]: newMember\n    };\n    this.setState({ members: newMembers });\n  };\n\n  onAddTask = member => {\n    const newTaskIds = Array.from(this.state.members[member].taskIds);\n    const taskString = genRandomString();\n    newTaskIds.push(taskString);\n\n    this.setState({\n      ...this.state,\n      tasks: {\n        ...this.state.tasks,\n        [taskString]: {\n          id: taskString,\n          content: \"\",\n          day: null\n        }\n      },\n      members: {\n        ...this.state.members,\n        [member]: {\n          ...this.state.members[member],\n          taskIds: newTaskIds\n        }\n      }\n    });\n  };\n\n  onTaskInputChange = (value, taskId) => {\n    const newTasks = {\n      ...this.state.tasks,\n      [taskId]: {\n        ...this.state.tasks[taskId],\n        content: value\n      }\n    };\n    this.setState({\n      ...this.state,\n      tasks: newTasks\n    });\n  };\n\n  onClickImport = () => {\n    const inputDOM = document.createElement(\"input\");\n    inputDOM.type = \"file\";\n    inputDOM.onchange = this.readImportedTask;\n    inputDOM.click();\n  };\n\n  readImportedTask = evt => {\n    const file = evt.target.files[0];\n    const textType = /text.*/;\n    if (file.type.match(textType)) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const content = e.target.result;\n        this.setState(JSON.parse(content));\n      };\n      reader.readAsText(file);\n    } else {\n      alert(\"Unsupported file format\");\n    }\n  };\n\n  render() {\n    const { selectedTeam, memberOrder, members, tasks } = this.state;\n    console.log(this.state);\n\n    return (\n      <>\n        <Toolbar\n          onClickImport={this.onClickImport}\n          onSelectTeam={team => this.onTeamSelect(team)}\n          selectedTeam={selectedTeam}\n        />\n        {selectedTeam && (\n          <DragDropContext onDragEnd={this.onDragEnd}>\n            <Droppable\n              droppableId=\"team-member-list\"\n              direction=\"horizontal\"\n              type=\"member\"\n            >\n              {provided => (\n                <Container {...provided.droppableProps} ref={provided.innerRef}>\n                  {memberOrder.map((member, index) => {\n                    return (\n                      <MemberTask\n                        key={`${selectedTeam}-${member}`}\n                        index={index}\n                        member={member}\n                        overloading={members[member].overloading}\n                        onAddTask={() => this.onAddTask(member)}\n                        day={members[member].day}\n                        tasks={members[member].taskIds.map(\n                          taskId => tasks[taskId]\n                        )}\n                        onSelectMemberDay={(day, member) =>\n                          this.onSelectMemberDay(\n                            day,\n                            member,\n                            members[member].day\n                          )\n                        }\n                        onSelectTaskDay={(taskId, day, member) =>\n                          this.onSelectTaskDay(taskId, day, member)\n                        }\n                        onDeleteTask={(taskId, day, member) =>\n                          this.onDeleteTask(taskId, day, member)\n                        }\n                        onTaskInputChange={(value, taskId) =>\n                          this.onTaskInputChange(value, taskId)\n                        }\n                      />\n                    );\n                  })}\n                  {provided.placeholder}\n                </Container>\n              )}\n            </Droppable>\n          </DragDropContext>\n        )}\n      </>\n    );\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}